<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/UIColor+Extension.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/UIColor(Extension)</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>UIColor+Extension.h</DeclaredIn>
            
			
			<NodeRef refid="37"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIColor/colorWithObject:</TokenIdentifier>
			<Abstract type="html">Initializes a UIColor based on the given object. The supported types are:</Abstract>
			<DeclaredIn>UIColor+Extension.h</DeclaredIn>
			
			<Declaration>+ (Color *)colorWithObject:(id)object</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">The object from which to get the information for creating the
color.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An initialized UIColor.</Abstract></ReturnValue>
			<Anchor>//api/name/colorWithObject:</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIColor/colorWithCArray:</TokenIdentifier>
			<Abstract type="html">Creates a color with a given C array of floats. The array must have at least 4
components which will be used as red, green, blue and alpha, in that order.</Abstract>
			<DeclaredIn>UIColor+Extension.h</DeclaredIn>
			
			<Declaration>+ (Color *)colorWithCArray:(CGFloat [ 4 ])array</Declaration>
			<Parameters>
				<Parameter>
					<Name>array</Name>
					<Abstract type="html">The array from which to get the values for the color.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An initialized UIColor instance.</Abstract></ReturnValue>
			<Anchor>//api/name/colorWithCArray:</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIColor/colorWithArray:</TokenIdentifier>
			<Abstract type="html">Creates a color with a given NSArray. The array must have from 1 to 4
NSNumbers.</Abstract>
			<DeclaredIn>UIColor+Extension.h</DeclaredIn>
			
			<Declaration>+ (Color *)colorWithArray:(NSArray *)array</Declaration>
			<Parameters>
				<Parameter>
					<Name>array</Name>
					<Abstract type="html">The array from which to get the values for the color.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An initialized UIColor instance.</Abstract></ReturnValue>
			<Anchor>//api/name/colorWithArray:</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIColor/colorWithName:</TokenIdentifier>
			<Abstract type="html">Creates a color based on a given name, such as &quot;orange&quot;, &quot;green&quot;, &quot;lightGray&quot;,
etc. The accepted names are the same as the corresponding class methods of
UIColor.</Abstract>
			<DeclaredIn>UIColor+Extension.h</DeclaredIn>
			
			<Declaration>+ (Color *)colorWithName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the desired color.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An initialized UIColor instance.</Abstract></ReturnValue>
			<Anchor>//api/name/colorWithName:</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIColor/times:</TokenIdentifier>
			<Abstract type="html">Multiplies the Red, Green and Blue components of the color by the given scalar
number. The alpha value is left untouched.</Abstract>
			<DeclaredIn>UIColor+Extension.h</DeclaredIn>
			
			<Declaration>- (Color *)times:(CGFloat)scalar</Declaration>
			<Parameters>
				<Parameter>
					<Name>scalar</Name>
					<Abstract type="html">The number by which to multiply the color&apos;s components.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A new color corresponding to the multiplicaton result.</Abstract></ReturnValue>
			<Anchor>//api/name/times:</Anchor>
            <NodeRef refid="37"/>
		</Token>
		
        
        
	</File>
</Tokens>