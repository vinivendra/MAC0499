<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSString+Extension.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSString(Extension)</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>NSString+Extension.h</DeclaredIn>
            
			
			<NodeRef refid="32"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSString/setNumberValue:</TokenIdentifier>
			<Abstract type="html">The value of the string as an NSNumber. Obtained by using the string&apos;s
doubleValue property, so it follows basically the same rules.</Abstract>
			<DeclaredIn>NSString+Extension.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, weak) NSNumber *numberValue</Declaration>
			
			
			<Anchor>//api/name/numberValue</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSString/numberValue</TokenIdentifier>
			<Abstract type="html">The value of the string as an NSNumber. Obtained by using the string&apos;s
doubleValue property, so it follows basically the same rules.</Abstract>
			<DeclaredIn>NSString+Extension.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, weak) NSNumber *numberValue</Declaration>
			
			
			<Anchor>//api/name/numberValue</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/NSString/numberValue</TokenIdentifier>
			<Abstract type="html">The value of the string as an NSNumber. Obtained by using the string&apos;s
doubleValue property, so it follows basically the same rules.</Abstract>
			<DeclaredIn>NSString+Extension.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, weak) NSNumber *numberValue</Declaration>
			
			
			<Anchor>//api/name/numberValue</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSString/valid</TokenIdentifier>
			<Abstract type="html">Checks if the string is empty or contains only whitespace.</Abstract>
			<DeclaredIn>NSString+Extension.h</DeclaredIn>
			
			<Declaration>- (BOOL)valid</Declaration>
			
			<ReturnValue><Abstract type="html">@p YES if the string is valid, @p NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/valid</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSString/indentation</TokenIdentifier>
			<Abstract type="html">Returns the number of whitespace characters preceding a non-whitespace
character in a line of text. Tabs, spaces and newlines are all counted as one
character.</Abstract>
			<DeclaredIn>NSString+Extension.h</DeclaredIn>
			
			<Declaration>- (NSUInteger)indentation</Declaration>
			
			<ReturnValue><Abstract type="html">A number representing the string&apos;s indentation level.</Abstract></ReturnValue>
			<Anchor>//api/name/indentation</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
        
        
	</File>
</Tokens>