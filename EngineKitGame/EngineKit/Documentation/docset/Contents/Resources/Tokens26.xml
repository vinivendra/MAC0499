<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSArray+Extension.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSArray(Extension)</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>NSArray+Extension.h</DeclaredIn>
            
			
			<NodeRef refid="26"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSArray/valid</TokenIdentifier>
			<Abstract type="html">Checks if the array is valid, which means that it exists and is not empty.</Abstract>
			<DeclaredIn>NSArray+Extension.h</DeclaredIn>
			
			<Declaration>- (BOOL)valid</Declaration>
			
			<ReturnValue><Abstract type="html">@p YES if the array is valid, @p NO otherwise.</Abstract></ReturnValue>
			<Anchor>//api/name/valid</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSArray/numberAtIndex:</TokenIdentifier>
			<Abstract type="html">Returns an NSNumber with the value from the given @p index, using NSNumber&apos;s @p
-numberWithObject: method. If the index goes past the array&apos;s bounds, returns
@(0).</Abstract>
			<DeclaredIn>NSArray+Extension.h</DeclaredIn>
			
			<Declaration>- (NSNumber *)numberAtIndex:(NSUInteger)index</Declaration>
			<Parameters>
				<Parameter>
					<Name>index</Name>
					<Abstract type="html">The index in the array from which to get the number.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSNumber.</Abstract></ReturnValue>
			<Anchor>//api/name/numberAtIndex:</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSArray/floatAtIndex:</TokenIdentifier>
			<Abstract type="html">Returns a CGFloat with the value from the given @p index, using NSNumber&apos;s @p
-numberWithObject: method. If the index goes past the array&apos;s bounds, returns
0.0f.</Abstract>
			<DeclaredIn>NSArray+Extension.h</DeclaredIn>
			
			<Declaration>- (CGFloat)floatAtIndex:(NSUInteger)index</Declaration>
			<Parameters>
				<Parameter>
					<Name>index</Name>
					<Abstract type="html">The index in the array from which to get the number.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSNumber index.</Abstract></ReturnValue>
			<Anchor>//api/name/floatAtIndex:</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/NSArray/at:</TokenIdentifier>
			<Abstract type="html">Returns the object at the selected index. If the index is out of bounds,
returns nil.</Abstract>
			<DeclaredIn>NSArray+Extension.h</DeclaredIn>
			
			<Declaration>- (id)at:(NSUInteger)index</Declaration>
			<Parameters>
				<Parameter>
					<Name>index</Name>
					<Abstract type="html">The index from which to get the object.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The object at the given index.</Abstract></ReturnValue>
			<Anchor>//api/name/at:</Anchor>
            <NodeRef refid="26"/>
		</Token>
		
        
        
	</File>
</Tokens>